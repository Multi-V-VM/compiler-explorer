# Default settings for C
compilers=:&gcc:&clang:&wasmcclang:&cicc:&bpfclang
defaultCompiler=gdefault
demangler=c++filt
objdumper=objdump
postProcess=
supportsBinary=true
supportsBinaryObject=true
binaryHideFuncRe=^(__.*|_(init|start|fini)|(de)?register_tm_clones|call_gmon_start|frame_dummy|\.plt.*)$
stubRe=\bmain\b
stubText=int main(void){return 0;/*stub provided by Compiler Explorer*/}
supportsLibraryCodeFilter=true

group.gcc.compilers=cg11:cg12:cg13:cgdefault
compiler.cg11.exe=/usr/bin/gcc-11
compiler.cg11.name=gcc 11.x
compiler.cg12.exe=/usr/bin/gcc-12
compiler.cg12.name=gcc 12.x
compiler.cg12.exe=/usr/bin/gcc-13
compiler.cg12.name=gcc 13.x
compiler.cgdefault.exe=/usr/bin/gcc
compiler.cgdefault.name=gcc default

group.clang.compilers=cclang14:cclang15:cclang16:cclangdefault:cclangccdefault
group.clang.intelAsm=-mllvm --x86-asm-syntax=intel
compiler.cclang14.exe=/usr/bin/clang-14
compiler.cclang14.name=clang 14
compiler.cclang15.exe=/usr/bin/clang-15
compiler.cclang15.name=clang 15
compiler.cclang16.exe=/usr/bin/clang-16
compiler.cclang16.name=clang 16
compiler.cclangdefault.exe=/usr/bin/clang
compiler.cclangdefault.name=clang default
compiler.cclangccdefault.exe=/usr/bin/clangcc
compiler.cclangccdefault.name=clang default

#########################
# Clang for WebAssembly
group.wasmcclang.compilers=wasm32cclang
group.wasmcclang.groupName=Clang WebAssembly
group.wasmcclang.supportsBinary=false
group.wasmcclang.supportsBinaryObject=false
group.wasmcclang.licenseName=LLVM Apache 2
group.wasmcclang.licenseLink=https://github.com/llvm/llvm-project/blob/main/LICENSE.TXT
group.wasmcclang.licensePreamble=The LLVM Project is under the Apache License v2.0 with LLVM Exceptions
group.wasmcclang.compilerCategories=clang

compiler.wasm32cclang.exe=/opt/wasi-sdk/bin/clang
compiler.wasm32cclang.demangler=/opt/wasi-sdk/bin/c++filt
compiler.wasm32cclang.name=WebAssembly clang (trunk)
compiler.wasm32cclang.options=-target wasm32-unkwon-wasi

group.bpfclang.compilers=bpf32cclang
group.bpfclang.groupName=Clang BPF
group.bpfclang.supportsBinary=false
group.bpfclang.supportsBinaryObject=false
group.bpfclang.licenseName=LLVM Apache 2
group.bpfclang.licenseLink=https://github.com/llvm/llvm-project/blob/main/LICENSE.TXT
group.bpfclang.licensePreamble=The LLVM Project is under the Apache License v2.0 with LLVM Exceptions
group.bpfclang.compilerCategories=clang

compiler.bpf32cclang.exe=/usr/bin/clang
compiler.bpf32cclang.demangler=/usr/bin/c++filt
compiler.bpf32cclang.name=BPF clang (trunk)
compiler.bpf32cclang.options=-target ebpf

tools=clangquerydefault:clangtidydefault:readelf:nm:pahole:readelf:strings:wamrc

tools.clangquerydefault.exe=/usr/bin/clang-query
tools.clangquerydefault.name=clang-query (default)
tools.clangquerydefault.type=independent
tools.clangquerydefault.class=clang-query-tool
tools.clangquerydefault.stdinHint=Query commands
tools.clangquerydefault.monacoStdin=true

tools.clangtidydefault.exe=/usr/bin/clang-tidy
tools.clangtidydefault.name=clang-tidy (default)
tools.clangtidydefault.type=independent
tools.clangtidydefault.class=clang-tidy-tool
tools.clangtidydefault.stdinHint=disabled

tools.readelf.name=readelf (default)
tools.readelf.exe=/usr/bin/readelf
tools.readelf.type=postcompilation
tools.readelf.class=readelf-tool
tools.readelf.exclude=djggp
tools.readelf.stdinHint=disabled

tools.nm.name=nm (default)
tools.nm.exe=/usr/bin/nm
tools.nm.type=postcompilation
tools.nm.class=nm-tool
tools.nm.exclude=djggp
tools.nm.stdinHint=disabled

tools.pahole.name=pahole
tools.pahole.exe=/usr/bin/pahole
tools.pahole.type=postcompilation
tools.pahole.class=pahole-tool
tools.pahole.exclude=
tools.pahole.stdinHint=disabled
tools.pahole.languageId=cppp

tools.strings.exe=/usr/bin/strings
tools.strings.name=strings
tools.strings.type=postcompilation
tools.strings.class=strings-tool
tools.strings.exclude=
tools.strings.stdinHint=disabled

tools.wamrc.exe=/home/victoryang00/Documents/asplos24/MVVM/lib/wasm-micro-runtime/wamr-compiler/build/clang
tools.wamrc.demangler=/opt/wasi-sdk/bin/c++filt
tools.wamrc.name=WebAssembly clang (trunk)
tools.wamrc.options=-target=x86_64 --enable-multi-thread